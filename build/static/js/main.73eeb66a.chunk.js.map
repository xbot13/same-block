{"version":3,"sources":["components/IOSSwitch.tsx","screens/PrivacyScreen.tsx","screens/SupportScreen.tsx","screens/HomeScreen.tsx","Logo.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["IOSSwitch","withStyles","theme","createStyles","root","width","height","padding","margin","spacing","switchBase","transform","color","palette","background","default","backgroundColor","secondary","main","opacity","border","thumb","track","borderRadius","transition","transitions","create","checked","focusVisible","classes","props","Switch","focusVisibleClassName","disableRipple","PrivacyScreen","href","target","rel","TOPICS","value","label","SupportScreen","useState","submitted","setSubmitted","topic","setTopic","email","setEmail","question","setQuestion","valid","error","setError","emailInput","useRef","topicInput","questionInput","className","onSubmit","console","log","TextField","ref","required","type","autoComplete","variant","onChange","event","helperText","select","map","option","rows","multiline","fullWidth","Button","onClick","err","emailV","test","trim","emailValidation","current","focus","HomeScreen","priv","sup","style","display","justifyContent","alignItems","flex","flexDirection","Typography","scrollIntoView","Logo","light","viewBox","fill","xmlns","id","mask-type","maskUnits","x","y","cx","cy","r","mask","App","setTheme","UiTheme","createMuiTheme","primary","text","disabled","home","ThemeProvider","CssBaseline","position","top","right","e","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.73eeb66a.chunk.js","sourcesContent":["import Switch, { SwitchClassKey, SwitchProps } from '@material-ui/core/Switch';\nimport { withStyles, Theme, createStyles } from '@material-ui/core/styles';\n\ninterface Styles extends Partial<Record<SwitchClassKey, string>> {\n    focusVisible?: string;\n}\n\ninterface Props extends SwitchProps {\n    classes: Styles;\n}\n\nconst IOSSwitch = withStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: 42,\n            height: 26,\n            padding: 0,\n            margin: theme.spacing(1),\n        },\n        switchBase: {\n            padding: 1,\n            '&$checked': {\n                transform: 'translateX(16px)',\n                color: theme.palette.background.default,\n                '& + $track': {\n                    backgroundColor: theme.palette.secondary.main,\n                    opacity: 1,\n                    border: 'none',\n                },\n            },\n            '&$focusVisible $thumb': {\n                color: theme.palette.secondary.main,\n                border: '6px solid #fff',\n            },\n        },\n        thumb: {\n            width: 24,\n            backgroundColor: theme.palette.background.default,\n            height: 24,\n        },\n        track: {\n            borderRadius: 26 / 2,\n            border: `1px solid ${theme.palette.background.default}`,\n            backgroundColor: theme.palette.secondary.main,\n            opacity: 1,\n            transition: theme.transitions.create(['background-color', 'border']),\n        },\n        checked: {},\n        focusVisible: {},\n    }),\n)(({ classes, ...props }: Props) => {\n    return (\n        <Switch\n            focusVisibleClassName={classes.focusVisible}\n            disableRipple\n            classes={{\n                root: classes.root,\n                switchBase: classes.switchBase,\n                thumb: classes.thumb,\n                track: classes.track,\n                checked: classes.checked,\n            }}\n            {...props}\n        />\n    );\n});\n\nexport default IOSSwitch","\ninterface Props {\n\n}\n\nconst PrivacyScreen = (props: Props) => {\n  return (\n    <div>\n      <strong>Privacy Policy</strong>\n      <p>\n        Tim Winkler built the SameBlocks app as\n        a Free app. This SERVICE is provided by\n        Tim Winkler at no cost and is intended for use as\n        is.\n      </p>\n      <p>\n        This page is used to inform visitors regarding my\n        policies with the collection, use, and disclosure of Personal\n        Information if anyone decided to use my Service.\n      </p>\n      <p>\n        If you choose to use my Service, then you agree to\n        the collection and use of information in relation to this\n        policy. The Personal Information that I collect is\n        used for providing and improving the Service. I will not use or share your information with\n        anyone except as described in this Privacy Policy.\n      </p>\n      <p>\n        The terms used in this Privacy Policy have the same meanings\n        as in our Terms and Conditions, which is accessible at\n        SameBlocks unless otherwise defined in this Privacy Policy.\n      </p>\n\n      <p>\n        <strong>Information Collection and Use</strong>\n      </p>\n      <p>\n        For a better experience, while using our Service, I\n        may require you to provide us with certain personally\n        identifiable information, including but not limited to None. The information that\n        I request will be retained on your device and is not collected by me in any way.\n      </p>\n      <div>\n        <p>\n          The app does use third party services that may collect\n          information used to identify you.\n        </p>\n        <p>\n          Link to privacy policy of third party service providers used\n          by the app\n        </p>\n\n        <ul>\n          <li><a href=\"https://www.google.com/policies/privacy/\" target=\"_blank\" rel=\"noopener noreferrer\">Google Play Services</a></li>\n          <li><a href=\"https://www.facebook.com/about/privacy/update/printable\" target=\"_blank\" rel=\"noopener noreferrer\">Facebook</a></li>\n          <li><a href=\"https://expo.io/privacy\" target=\"_blank\" rel=\"noopener noreferrer\">Expo</a></li>\n        </ul>\n\n      </div>\n\n      <p>\n        <strong>Log Data</strong>\n      </p>\n      <p>\n        I want to inform you that whenever you\n        use my Service, in a case of an error in the app\n        I collect data and information (through third party\n        products) on your phone called Log Data. This Log Data may\n        include information such as your device Internet Protocol\n        (“IP”) address, device name, operating system version, the\n        configuration of the app when utilizing my Service,\n        the time and date of your use of the Service, and other\n        statistics.\n                </p> <p><strong>Cookies</strong></p> <p>\n        Cookies are files with a small amount of data that are\n        commonly used as anonymous unique identifiers. These are sent\n        to your browser from the websites that you visit and are\n        stored on your device's internal memory.\n                </p> <p>\n        This Service does not use these “cookies” explicitly. However,\n        the app may use third party code and libraries that use\n        “cookies” to collect information and improve their services.\n        You have the option to either accept or refuse these cookies\n        and know when a cookie is being sent to your device. If you\n        choose to refuse our cookies, you may not be able to use some\n        portions of this Service.\n                </p> <p><strong>Service Providers</strong></p> <p>\n        I may employ third-party companies and\n        individuals due to the following reasons:\n                </p> <ul><li>To facilitate our Service;</li> <li>To provide the Service on our behalf;</li> <li>To perform Service-related services; or</li> <li>To assist us in analyzing how our Service is used.</li></ul> <p>\n        I want to inform users of this Service\n        that these third parties have access to your Personal\n        Information. The reason is to perform the tasks assigned to\n        them on our behalf. However, they are obligated not to\n        disclose or use the information for any other purpose.\n                </p> <p><strong>Security</strong></p> <p>\n        I value your trust in providing us your\n        Personal Information, thus we are striving to use commercially\n        acceptable means of protecting it. But remember that no method\n        of transmission over the internet, or method of electronic\n        storage is 100% secure and reliable, and I cannot\n        guarantee its absolute security.\n                </p> <p><strong>Links to Other Sites</strong></p> <p>\n        This Service may contain links to other sites. If you click on\n        a third-party link, you will be directed to that site. Note\n        that these external sites are not operated by me.\n        Therefore, I strongly advise you to review the\n        Privacy Policy of these websites. I have\n        no control over and assume no responsibility for the content,\n        privacy policies, or practices of any third-party sites or\n        services.\n                </p> <p><strong>Children’s Privacy</strong></p> <p>\n        These Services do not address anyone under the age of 13.\n        I do not knowingly collect personally\n        identifiable information from children under 13 years of age. In the case\n        I discover that a child under 13 has provided\n        me with personal information, I immediately\n        delete this from our servers. If you are a parent or guardian\n        and you are aware that your child has provided us with\n        personal information, please contact me so that\n        I will be able to do necessary actions.\n                </p> <p><strong>Changes to This Privacy Policy</strong></p> <p>\n        I may update our Privacy Policy from\n        time to time. Thus, you are advised to review this page\n        periodically for any changes. I will\n        notify you of any changes by posting the new Privacy Policy on\n        this page.\n                </p> <p>This policy is effective as of 2021-03-12</p> <p><strong>Contact Us</strong></p> <p>\n        If you have any questions or suggestions about my\n        Privacy Policy, do not hesitate to contact me at timmoritzwinkler@web.de.\n                </p>\n\n\n\n    </div>\n  )\n}\n\nexport default PrivacyScreen\n\n","import React, { useRef, useState } from 'react'\nimport TextField from '@material-ui/core/TextField';\nimport { Button } from '@material-ui/core';\n\n\ninterface Props {\n\n}\n\nconst TOPICS = [\n    {\n        value: \"Support\",\n        label: \"Support\"\n    },\n    {\n        value: \"Other\",\n        label: \"Other\"\n    },\n]\n\nconst emailValidation = (email: string) => {\n    if (\n        /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(\n            email,\n        )\n    ) {\n        return true;\n    }\n    if (email.trim() === '') {\n        return 'Email is required';\n    }\n    return 'Please enter a valid email';\n};\n\n\nconst SupportScreen = (props: Props) => {\n\n    const [submitted, setSubmitted] = useState(false)\n    const [topic, setTopic] = useState<string>('')\n    const [email, setEmail] = useState<string>('')\n    const [question, setQuestion] = useState<string>('')\n    const [error, setError] = useState({\n        email: {\n            valid: true,\n            error: \"\"\n        },\n        topic: {\n            valid: true,\n            error: \"\"\n        },\n        question: {\n            valid: true,\n            error: \"\"\n        }\n    })\n\n    const emailInput = useRef<HTMLDivElement>(null)\n    const topicInput = useRef<HTMLDivElement>(null)\n    const questionInput = useRef<HTMLDivElement>(null)\n\n    const handleSubmit = () => {\n\n        let err: typeof error = { ...error }\n        const emailV = emailValidation(email)\n\n        if (emailV === true) {\n            err = {\n                ...err, email: {\n                    valid: true,\n                    error: \"\"\n                }\n            }\n            emailInput.current?.focus()\n        } else {\n            err = {\n                ...err, email: {\n                    valid: false,\n                    error: emailV\n                }\n            }\n        }\n\n        if (topic === '') {\n            err = {\n                ...err, topic: {\n                    valid: false,\n                    error: \"no topic selected\"\n                }\n            }\n            topicInput.current?.focus()\n\n        } else {\n            err = {\n                ...err, topic: {\n                    valid: true,\n                    error: \"\"\n                }\n            }\n        }\n\n\n        if (question === null || question === '') {\n            err = {\n                ...err, question: {\n                    valid: false,\n                    error: \"no question given\"\n                }\n            }\n            questionInput.current?.focus()\n\n        } else {\n            err = {\n                ...err, question: {\n                    valid: true,\n                    error: \"\"\n                }\n            }\n        }\n\n        setError({ ...err })\n        console.log(\"err\", err)\n        if (err.email.valid && err.topic.valid && err.question.valid) {\n            console.log(\"submit\")\n            setSubmitted(true)\n        }\n    }\n\n\n    if (submitted) {\n        return (\n            <div className=\"support\">\n                Your Request was succesfuly submitted!\n            </div>\n        )\n    } else {\n\n        return (\n\n\n            <form className=\"support\" onSubmit={() => {\n                console.log(\"test\")\n            }} >\n                <TextField\n                    ref={emailInput}\n                    required\n                    type=\"email\"\n                    autoComplete=\"email\"\n                    label=\"E-Mail\"\n                    variant=\"outlined\"\n                    margin={\"normal\"}\n                    value={email}\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => setEmail(event.target.value)}\n                    error={!error.email.valid}\n                    helperText={error.email.error}\n                    onSubmit={() => { }}\n                />\n                <TextField\n                    ref={topicInput}\n                    required\n                    label=\"Topic\"\n                    variant=\"outlined\"\n                    select\n                    value={topic}\n                    margin={\"normal\"}\n                    error={!error.topic.valid}\n                    helperText={error.topic.error}\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => setTopic(event.target.value)}\n                >\n                    {TOPICS.map((option) => (\n                        <option key={option.value} value={option.value} >\n                            {option.label}\n                        </option>\n                    ))}\n                </TextField>\n\n\n                <TextField\n                    ref={questionInput}\n                    required\n                    rows={4}\n                    label=\"Question\"\n                    variant=\"outlined\"\n                    multiline\n                    margin={\"normal\"}\n                    value={question}\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => setQuestion(event.target.value)}\n                    error={!error.question.valid}\n                    helperText={error.question.error}\n                    fullWidth\n                />\n\n                <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\n                    Submit\n            </Button>\n            </form>\n\n        )\n    }\n}\n\nexport default SupportScreen\n","import React from 'react'\nimport { Typography, Button } from '@material-ui/core';\n\ninterface Props {\n    priv: React.MutableRefObject<HTMLDivElement>,\n    sup: React.MutableRefObject<HTMLDivElement>,\n}\n\nconst HomeScreen = ({ priv, sup }: Props) => {\n    return (\n        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", flex: 1, flexDirection: \"column\" }}>\n\n            <div>\n                <Typography variant=\"h3\">Hello There,</Typography>\n                <Typography variant=\"h4\">how can we help you?</Typography>\n            </div>\n\n\n            <div style={{ display: \"flex\", flexDirection: \"column\", padding: 20 }}>\n                <div style={{ padding: 10 }}>\n\n                    <Button onClick={() => sup?.current.scrollIntoView()} variant=\"contained\" color=\"primary\" >\n                        I need Support\n                    </Button>\n\n                </div>\n                <div style={{ padding: 10 }}>\n\n                    <Button onClick={() => priv?.current.scrollIntoView()} variant=\"contained\" color=\"primary\" >\n                        Look at the Privacy statement\n                    </Button>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default HomeScreen\n","import { SVGProps } from \"react\";\n\ntype Props = {\n    light: boolean,\n} & SVGProps<SVGSVGElement>\n\nexport const Logo = ({ light, ...props }: Props) => (\n    <svg width=\"1024\" height=\"1024\" viewBox=\"0 0 1024 1024\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n        <rect width=\"1024\" height=\"1024\" fill={light ? \"#F77F00\" : \"#6B2C39\"} />\n        <mask id=\"mask0\" mask-type=\"alpha\" maskUnits=\"userSpaceOnUse\" x=\"172\" y=\"172\" width=\"680\" height=\"680\">\n            <circle cx=\"512\" cy=\"512\" r=\"340\" fill=\"#C4C4C4\" />\n        </mask>\n        <g mask=\"url(#mask0)\">\n            <rect x=\"512\" y=\"512\" width=\"340\" height=\"340\" fill={light ? \"#FCBF49\" : \"#004266\"} />\n            <rect x=\"172\" y=\"512\" width=\"340\" height=\"340\" fill=\"#D62828\" />\n            <rect x=\"512\" y=\"172\" width=\"340\" height=\"340\" fill={light ? \"#6b2c39\" : \"#F77F00\"} />\n            <rect x=\"172\" y=\"172\" width=\"340\" height=\"340\" fill={light ? \"#004266\" : \"#FCBF49\"} />\n        </g>\n    </svg>)\n","import './App.css';\nimport React, { useRef, useState } from 'react';\nimport IOSSwitch from './components/IOSSwitch'\nimport {\n  createMuiTheme,\n  ThemeProvider,\n} from '@material-ui/core/styles';\nimport PrivacyScreen from './screens/PrivacyScreen';\nimport SupportScreen from './screens/SupportScreen';\nimport { Typography, CssBaseline, Button } from '@material-ui/core';\nimport HomeScreen from './screens/HomeScreen';\nimport { Logo } from './Logo'\n\nconst color = {\n  blue: \"#00293D\",\n  indigo: \"#004266\",\n  wine: \"#6b2c39\",\n  red: \"#d62828\",\n  orange: \"#f77f00\",\n  yellow: \"#fcbf49\",\n  meringue: \"#eae2b7\"\n}\n\n\nfunction App() {\n\n  const [theme, setTheme] = useState(false)\n\n\n  const UiTheme = createMuiTheme({\n    palette: {\n      type: theme ? \"dark\" : \"light\",\n      primary: {\n        main: theme ? color.yellow : color.indigo,\n      },\n      secondary: {\n        main: theme ? color.wine : color.orange,\n      },\n      background: {\n        default: theme ? color.blue : color.meringue\n      },\n      text: {\n        primary: theme ? color.meringue : color.indigo,\n        secondary: theme ? color.meringue : color.indigo,\n        disabled: theme ? color.wine : color.wine\n      }\n    },\n  })\n\n  const home = useRef<HTMLDivElement>(null!)\n  const sup = useRef<HTMLDivElement>(null!)\n  const priv = useRef<HTMLDivElement>(null!)\n\n  return (\n    <ThemeProvider theme={UiTheme}>\n\n      <CssBaseline />\n\n\n      {/* <Nav {...{ theme, setTheme }} /> */}\n      <div className=\"App\">\n        <div className=\"Header\" style={{ backgroundColor: theme ? color.wine : color.orange }}>\n\n\n\n          <div className=\"Logo\">\n            <Logo light={!theme} height={\"auto\"} width={\"90%\"} />\n            <Typography variant=\"h4\" style={{ transform: \"translate(-50%, 0);\" }}>SAME BLOCKS</Typography>\n          </div>\n\n          <div className=\"Taps\">\n            <Button onClick={() => home.current.scrollIntoView()}> Home</Button>\n            <Button onClick={() => sup.current.scrollIntoView()}>Support</Button>\n            <Button onClick={() => priv.current.scrollIntoView()}>Privacy</Button>\n          </div>\n\n\n\n\n        </div>\n\n\n        <div className=\"View\">\n          <div style={{ position: \"absolute\", top: \"2em\", right: \"2em\" }}>\n            <IOSSwitch checked={theme} onChange={(e: React.ChangeEvent<HTMLInputElement>) => setTheme(!theme)} />\n          </div>\n\n          <div className=\"Conten\">\n            <div className=\"screen\" ref={home}>\n              <HomeScreen priv={priv} sup={sup} />\n            </div>\n\n            <div className=\"screen\" ref={priv} id=\"privacypolicy\">\n              <PrivacyScreen />\n            </div>\n\n            <div className=\"screen\" ref={sup} id=\"support\">\n              <SupportScreen />\n            </div>\n          </div>\n\n        </div>\n      </div>\n\n\n\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}